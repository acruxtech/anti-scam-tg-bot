import logging

from aiogram import Router, Bot
from aiogram.types import ChatMemberUpdated
from aiogram.filters.chat_member_updated import (
    ChatMemberUpdatedFilter, IS_NOT_MEMBER, ADMINISTRATOR, IS_MEMBER
)

from src.core.services import scammers_service, chat_service, user_service
from src.core.schemas import ChatScheme


router = Router()
logger = logging.getLogger(__name__)


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=ADMINISTRATOR))
async def bot_added_as_admin(event: ChatMemberUpdated, bot: Bot):
    await bot.send_message(
        event.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∑–∞—â–∏—Ç—ã –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤. –ú–æ—è –∑–∞–¥–∞—á–∞ - –æ–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —á–∞—Ç–∞. "
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –∫–∞–∫–æ–π-—Ç–æ –ª–∏—á–Ω–æ—Å—Ç–∏, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–æ –º–Ω–µ. "
        "–î–∞–≤–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ –¥–ª—è –∑–∞—â–∏—Ç—ã –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞ –æ—Ç –Ω–µ–¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π! üí™üõ°"
    )
    await bot.send_message(
        event.from_user.id,
        f"–£—Å–ø–µ—à–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è –≤ <b>{event.chat.title}</b>!\n\n"
        f"–¢–µ–ø–µ—Ä—å –º–æ—à–µ–Ω–Ω–∏–∫–∏ –Ω–µ —Å–º–æ–≥—É—Ç –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≤–∞—à –∫–∞–Ω–∞–ª.",
    )
    chat = ChatScheme(
        id=event.chat.id,
        title=event.chat.title,
    )
    await chat_service.add_chat(chat)


@router.chat_member(ChatMemberUpdatedFilter(member_status_changed=IS_MEMBER))
async def check_new_member(event: ChatMemberUpdated, bot: Bot):
    scammer = await scammers_service.get_scammer_by_all(event.from_user.id, event.from_user.username)

    if scammer and scammer.id == event.from_user.id:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∏ÃÜ–¥–µ–Ω! –ë—ã–ª –∑–∞–±–∞–Ω–µ–Ω! id = {scammer.id}, username = {scammer.username}")
        await bot.ban_chat_member(event.chat.id, event.from_user.id)


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=IS_NOT_MEMBER))
async def bot_deleted(event: ChatMemberUpdated, bot: Bot):
    if event.chat.type == "private":
        if event.new_chat_member.status == 'kicked':
            await user_service.update_user_status(event.chat.id, True)
        if event.old_chat_member.status == "kicked":
            await user_service.update_user_status(event.chat.id, False)
    else:
        await bot.send_message(
            event.from_user.id,
            f"–í—ã —É–¥–∞–ª–∏–ª–∏ –º–µ–Ω—è –∏–∑ –≥—Ä—É–ø–ø—ã <b>{event.chat.title}</b>!"
            f"–¢–µ–ø–µ—Ä—å –≤–∞—à –∫–∞–Ω–∞–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ —É–≥—Ä–æ–∑–æ–π!"
        )
        await chat_service.delete_chat(event.chat.id)
