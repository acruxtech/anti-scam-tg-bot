from aiogram import Bot, Router, F
from aiogram.types import Message, CallbackQuery, User
from aiogram.fsm.state import State, StatesGroup
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext
from aiogram.utils.media_group import MediaGroupBuilder

from src.config import MODERATOR_ID

from src.core.keyboards.basic import (
    get_send_user_keyboard,
    get_main_menu_keyboard,
    get_send_media_scammer_keyboard,
    get_contact_cancel_keyboard,
    get_report_keyboard,
    get_send_channel_keyboard,
    get_username_keyboard,
    get_apply_send_keyboard, get_back_keyboard,
)
from src.core.keyboards.menu import get_report_message
from src.core.keyboards.admin import get_text_edit_keyboard

from src.core.utils.callbacks import AddScamer

from src.core.utils.messages import get_about_scammer_message

from src.core.schemas import ScammerScheme, ProofScheme
from src.core.services import scammers_service
from src.db.models import ScammerMedia, Proof

from src.core.utils.callbacks import ProofMessage
from src.core.utils.scammers import get_scammer_data_from_message, create_message_about_scammer

scammer_router = Router()

F: Message


class AddScammerForm(StatesGroup):
    get_who_report = State()
    get_profile = State()
    get_link = State()
    add_profile = State()
    detect_hide_profile = State()
    get_username = State()
    get_proofs = State()
    get_media = State()
    add_scam_to_database = State()
    get_explanation = State()
    get_edited_text = State()


@scammer_router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏–∫–∞ ‚úçÔ∏è")
async def send_scam_user(message: Message, bot: Bot, state: FSMContext):
    await message.answer(
        "–ù–∞ –∫–æ–≥–æ –≤—ã –∫–∏–¥–∞–µ—Ç–µ —Ä–µ–ø–æ—Ä—Ç?\n\n", reply_markup=get_report_keyboard()
    )
    await state.set_state(AddScammerForm.get_who_report)


@scammer_router.message(AddScammerForm.get_who_report, F.text == "–ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  üë§")
async def send_scam_user(message: Message, bot: Bot, state: FSMContext):
    await message.answer(
        f"–ü–µ—Ä–µ—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏–∫–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç\n\n",
        reply_markup=get_send_user_keyboard()
    )
    await state.set_state(AddScammerForm.get_profile)


@scammer_router.message(AddScammerForm.get_who_report, F.text == "–ù–∞ –∫–∞–Ω–∞–ª  üì¢")
async def send_scam_user(message: Message, bot: Bot, state: FSMContext):
    await message.answer(
        f"–ü–µ—Ä–µ—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É\n\n",
        reply_markup=get_send_channel_keyboard()
    )
    await state.set_state(AddScammerForm.get_profile)


@scammer_router.callback_query(AddScamer.filter(F.action == "menu"))
async def back(call: CallbackQuery, bot: Bot, state: FSMContext):
    await call.answer()
    await call.message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", reply_markup=get_main_menu_keyboard(call.from_user.id))
    await state.clear()


@scammer_router.message(AddScammerForm.get_profile)
async def get_scam(message: Message, bot: Bot, state: FSMContext):
    if message.user_shared or message.forward_from:
        await message.answer("–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚úÖ", reply_markup=get_contact_cancel_keyboard())
        scammer = get_scammer_data_from_message(message)

        await state.update_data(scammer=scammer)

        await message.answer(
            "–ü—Ä–∏—à–ª–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
            "–ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ  üëáüëáüëá",
            reply_markup=get_username_keyboard()
        )
        await state.set_state(AddScammerForm.get_username)

    elif message.chat_shared:
        scammer = get_scammer_data_from_message(message)
        await state.update_data(scammer=scammer)
        await message.answer(
            "–û—Ç–ø—Ä–∞–≤—å —é–∑–µ—Ä–Ω–µ–π–º –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –µ–≥–æ —Å—Å—ã–ª–∫—É",
            reply_markup=get_back_keyboard(),
        )
        await state.set_state(AddScammerForm.get_link)
    else:
        await message.answer(
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–±–æ —Å–∫—Ä—ã–ª –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ, –ª–∏–±–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ \n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëáüëáüëá",
            reply_markup=get_send_user_keyboard()
        )


@scammer_router.message(AddScammerForm.get_link)
async def get_link(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scammer: ScammerScheme = data["scammer"]
    scammer.username = message.text.replace("https://t.me/", "").replace("@", "")
    await state.update_data(scammer=scammer)
    await message.answer(
        "–†–∞—Å–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ —É —Ç–µ–±—è —Å –∫–∞–Ω–∞–ª–æ–º:",
        reply_markup=get_back_keyboard(),
    )
    await state.set_state(AddScammerForm.get_proofs)


@scammer_router.message(AddScammerForm.get_username)
async def get_username(message: Message, bot: Bot, state: FSMContext):
    if message.text:
        if message.text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ username":
            username = ""
        else:
            username = message.text.replace("https://t.me/", "").replace("@", "")

        data = await state.get_data()
        data["scammer"].username = username

        await state.update_data(scammer=data["scammer"])
        await message.answer(
            "–†–∞—Å–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ —É —Ç–µ–±—è —Å –º–æ—à–µ–Ω–Ω–∏–∫–æ–º:\n\n"
            "<b>–í–∞–∂–Ω–æ:</b> –≤ —Ç–µ–∫—Å—Ç–µ —Ç–∞–∫–∂–µ —É–∫–∞–∂–∏—Ç–µ –≤—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —é–∑–µ—Ä–Ω–µ–π–º—ã, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –µ—Å—Ç—å:",
            reply_markup=get_back_keyboard(),
        )
        await state.set_state(AddScammerForm.get_proofs)
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–∏ÃÜ—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–∏ÃÜ username")


@scammer_router.callback_query(AddScamer.filter(F.action == "send_report"))
async def send_report(call: CallbackQuery, bot: Bot, state: FSMContext):
    await call.answer()
    data = await state.get_data()

    scammer = data.get("scammer")
    proof = data.get("proof")
    media = data.get("media")

    print("-" * 100)
    print(scammer)
    print(proof)
    print(media)

    if media:
        scammer_from_db, proof_from_db = await scammers_service.save(scammer, proof, media)
        await state.clear()
        await send_post_to_moderator_chat(call.from_user, bot, scammer_from_db, proof_from_db)
        await call.message.answer(
            "<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!</b>\n\n"
            "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ —É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, –æ–∂–∏–¥–∞–π—Ç–µ‚Ä¶",
            reply_markup=get_main_menu_keyboard(call.from_user.id)
        )
    else:
        await call.message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ö–æ—Ç—è –±—ã 1 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ")


@scammer_router.callback_query(AddScamer.filter(F.action == "reset"))
async def delete_media(call: CallbackQuery, bot: Bot, state: FSMContext):
    await state.update_data(media=None)
    await call.answer()
    await call.message.answer("–ü—Ä—É—Ñ—ã —Å–±—Ä–æ—à–µ–Ω—ã, –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ", reply_markup=get_send_media_scammer_keyboard())


async def send_post_to_moderator_chat(
    user: User,
    bot: Bot,
    scammer_from_db: ScammerScheme,
    proof_from_db: ProofScheme
):
    media = await ScammerMedia.repository().get_list(
        ScammerMedia.proof_id == proof_from_db.id
    )

    text = proof_from_db.text

    album_builder = MediaGroupBuilder(
        caption=f"<code>{text}</code>"
    )

    for media_item in media:
        if media_item.type == "photo":
            album_builder.add_photo(media=media_item.file_id)
        elif media_item.type == "video":
            album_builder.add_video(media=media_item.file_id)

    about_scammer = get_about_scammer_message(scammer_from_db)

    await bot.send_message(
        MODERATOR_ID,
        f"–†–µ–ø–æ—Ä—Ç –æ—Ç <b>@{user.username}</b> \n\n"
        f"–ù–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: \n\n"
        f"{about_scammer}  üõë"
    )

    await bot.send_media_group(MODERATOR_ID, album_builder.build())

    await bot.send_message(
        MODERATOR_ID, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_report_message(user.id, proof_from_db.id, scammer_from_db.id)
    )


@scammer_router.callback_query(ProofMessage.filter())
async def accept_decision(call: CallbackQuery, bot: Bot, state: FSMContext, callback_data: ProofMessage):
    await Proof.repository().update(
        {"decision": callback_data.decision, "moderator_id": call.from_user.id},
        callback_data.id,
    )

    if callback_data.decision:
        await state.update_data(data={
            "proof_id": callback_data.id,
            "call_message_chat_id": call.message.chat.id,
            "call_message_message_id": call.message.message_id,
            "callback_data.user_id": callback_data.user_id,
            "callback_data.scammer_id": callback_data.scammer_id
        })
        await call.message.answer(
            "–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø—Ä–∏—á–∏–Ω—É –∑–∞–Ω–µ—Å–µ–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ –±–∞–∑—É\n\n"
            "–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ  üëáüëáüëá",
            reply_markup=get_text_edit_keyboard()
        )
        await state.set_state(AddScammerForm.get_edited_text)
    else:
        await bot.edit_message_text(
            f"{call.from_user.username} –æ—Ç–∫–ª–æ–Ω–∏–ª –¥–∞–Ω–Ω—ã–π —Ä–µ–ø–æ—Ä—Ç  ‚ùå",
            call.message.chat.id,
            call.message.message_id
        )
        await bot.send_message(
            callback_data.user_id,
            f"–ú—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –≤–∞—à —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! \n\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É!"
        )

    await call.answer()


@scammer_router.message(AddScammerForm.get_edited_text, F.text)
async def get_edited_text(message: Message, bot: Bot, state: FSMContext):

    data = await state.get_data()
    print(data)

    proof_id = data["proof_id"]
    call_message_chat_id = data["call_message_chat_id"]
    call_message_message_id = data["call_message_message_id"]
    callback_data_user_id = data["callback_data.user_id"]
    callback_data_scammer_id = data["callback_data.scammer_id"]

    if message.text != "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π":
        await Proof.repository().update(
            {"text": message.text},
            proof_id,
        )
        await message.answer("–ú–æ—à–µ–Ω–Ω–∏–∫ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º  ‚úÖ")
    else:
        await message.answer("–ú–æ—à–µ–Ω–Ω–∏–∫ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞  ‚úÖ")

    await scammers_service.confirm(callback_data_scammer_id)

    # get scammer message
    scammer = await scammers_service.get_scammer(callback_data_scammer_id)
    proof, msg = await create_message_about_scammer(scammer)

    await message.answer("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ —á–∞—Ç–∞–º", reply_markup=get_apply_send_keyboard(scammer.id))

    # chats = await chat_service.get_chats()
    # print(chats)
    # for chat in chats:
    #     with suppress(BaseException):
    #         if proof:
    #             await create_media(scammer, proof, message, bot, msg, chat_id=chat.id, with_suffix=False)

    try:
        await bot.edit_message_text(
            f"{message.from_user.username} –¥–æ–±–∞–≤–∏–ª –º–æ—à–µ–Ω–Ω–∏–∫–∞ –≤ –±–∞–∑—É  ‚úÖ",
            call_message_chat_id,
            call_message_message_id
        )
    except TelegramBadRequest:
        pass
    await bot.send_message(
        callback_data_user_id,
        "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏ –≤–∞—à —Ä–µ–ø–æ—Ä—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–Ω–µ—Å–ª–∏ –µ–≥–æ –≤ –±–∞–∑—É! üëÆ‚Äç‚ôÇ\n\n"
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–º–æ—â—å –≤ –±–æ—Ä—å–±–µ —Å –º–æ—à–µ–Ω–Ω–∏–∫–∞–º–∏!  ü§ù"
    )
    await state.clear()


@scammer_router.message(AddScammerForm.get_media, F.video)
async def get_video(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scammer_id = data["scammer"].id

    video_id = message.video.file_id

    media = data.get("media")

    media_item = {
        "file_id": video_id,
        "type": "video",
        "scammer_id": scammer_id
    }

    if media:
        media.append(media_item)
    else:
        media = [media_item]

    await state.update_data(media=media)

    # await message.edit_reply_markup(
    #     reply_markup=get_send_media_scammer_keyboard()
    # )


@scammer_router.message(AddScammerForm.get_media, F.photo)
async def get_photo(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scammer_id = data["scammer"].id

    photo_id = message.photo[0].file_id

    media = data.get("media")

    media_item = {
        "file_id": photo_id,
        "type": "photo",
        "scammer_id": scammer_id
    }

    if media:
        media.append(media_item)
    else:
        media = [media_item]

    await state.update_data(media=media)


@scammer_router.message(AddScammerForm.get_proofs, F.text)
async def ask_proofs(message: Message, bot: Bot, state: FSMContext):
    data = await state.get_data()
    scammer = data["scammer"]
    proof = ProofScheme(text=message.text, scammer_id=scammer.id, user_id=message.from_user.id)
    await message.answer(
        "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–∫–∞–º–∞ (–Ω–µ –±–æ–ª–µ–µ 10 —à—Ç) üñº üé• \n\n"
        "–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëáüëáüëá",
        reply_markup=get_send_media_scammer_keyboard()
    )
    await state.update_data(proof=proof)
    await state.set_state(AddScammerForm.get_media)
